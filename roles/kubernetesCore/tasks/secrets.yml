---
# tasks file for roles/kubernetesCore secrets
- name: Get CA certificates from Vault for kubernetes
  block:
    - name: Get CA certificates from Vault
      ansible.builtin.include_role:
        name: vault
 
    - name: Change permission cert files
      ansible.builtin.file:
        path: "{{ role_path }}/files/{{ item }}"
        mode: "0644"
      loop: 
        - "{{ ingress.certfiles.crt }}"
        - "{{ ingress.certfiles.key }}"

    - name: Create secret for namespace '{{ kubeadm.cluster.namespace }}'
      community.kubernetes.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "secret-{{ kubeadm.cluster.namespace }}"
            namespace: "{{ kubeadm.cluster.namespace }}"
          data:
            tls.crt: "{{ lookup('file', '{{ role_path }}/files/{{ ingress.certfiles.crt }}') | b64encode }}"
            tls.key: "{{ lookup('file', '{{ role_path }}/files/{{ ingress.certfiles.key }}') | b64encode }}"
          type: kubernetes.io/tls
      no_log: true

    - name: Create ConfigMap for namespace '{{ kubeadm.cluster.namespace }}'
      community.kubernetes.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "configmap-{{ kubeadm.cluster.namespace }}"
            namespace: "{{ kubeadm.cluster.namespace }}"
          data:
            ssl-certificate: "secret-{{ kubeadm.cluster.namespace }}"
            ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA"
            ssl-protocols: "TLSv1.2 TLSv1.3"
  always:
    - name: Cleanup to remove sensitive data locally
      ansible.builtin.file:
        path: "{{ role_path }}/files/{{ item }}"
        state: absent
      loop: "{{ ingress.certfiles.values() | flatten  }}"
  connection: local
  delegate_to: localhost
