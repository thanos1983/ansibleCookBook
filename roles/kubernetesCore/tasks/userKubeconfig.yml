---
# tasks file for roles/kubernetesCore userKubeconfig
- name: Create directory '{{ rbac.dir }}' if it does not exist
  ansible.builtin.file:
    path: "{{ rbac.dir }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"

- name: Generate an OpenSSH key (4096 bits, rsa)
  community.crypto.openssh_keypair:
    force: true
    path: "{{ rbac.dir }}/{{ kubernetes.rbac.user }}.key"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: Generate an OpenSSL Certificate Signing Request
  community.crypto.openssl_csr:
    common_name: "{{ kubernetes.rbac.user }}"
    path: "{{ rbac.dir }}//{{ kubernetes.rbac.user }}.csr"
    organization_name: "{{ kubeadm.cluster.namespace }}"
    privatekey_path: "{{ rbac.dir }}//{{ kubernetes.rbac.user }}.key"
    owner: "{{ user }}"
    group: "{{ user }}"

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ rbac.dir }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    remote_src: yes
    mode: "0644"
  loop: "{{ kubeadm.certfiles.values() | flatten  }}"

- name: Generate a Self Signed OpenSSL certificate
  community.crypto.x509_certificate:
    provider: ownca
    owner: "{{ user }}"
    group: "{{ user }}"
    path: "{{ rbac.dir }}/{{ kubernetes.rbac.user }}.crt"
    csr_path: "{{ rbac.dir }}/{{ kubernetes.rbac.user }}.csr"
    ownca_path: "{{ rbac.dir }}/ca.crt"
    ownca_privatekey_path: "{{ rbac.dir }}/ca.key"

- name: Gather facts for external Virtual IP load balancer
  register: loadBalancerFacts
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!any"
      - "network"
      - "virtual"
      - "facter"
  delegate_facts: true
  delegate_to: "{{ item }}"
  # to be updated with the kubernetesLoadBalancer Vip
  loop: "{{ groups['kubernetesLoadBalancer'] }}"

- name: Create kubeconfig file for user '{{ kubernetes.rbac.user }}'
  ansible.builtin.shell:
    cmd: >
          kubectl --kubeconfig {{ rbac.dir }}/{{ kubernetes.rbac.user }}.kubeconfig
          config set-cluster kubernetes
          --server https://{{ loadBalancerFacts.results[0].ansible_facts.facter_networking.ip }}:{{ kubernetes.controlPlanePort }}
          --certificate-authority {{ rbac.dir }}/ca.crt

- name: Set credentials of '{{ kubernetes.rbac.user }}.kubeconfig' file
  ansible.builtin.shell:
    cmd: >
          kubectl --kubeconfig {{ rbac.dir }}/{{ kubernetes.rbac.user }}.kubeconfig
          config set-credentials {{ kubernetes.rbac.user }}
          --client-certificate {{ rbac.dir }}/{{ kubernetes.rbac.user }}.crt
          --client-key {{ rbac.dir }}/{{ kubernetes.rbac.user }}.key

- name: Set context of '{{ kubernetes.rbac.user }}.kubeconfig' file
  ansible.builtin.shell:
    cmd: >
          kubectl --kubeconfig {{ rbac.dir }}/{{ kubernetes.rbac.user }}.kubeconfig
          config set-context {{ kubernetes.rbac.user }}-kubernetes
          --cluster kubernetes
          --namespace {{ kubeadm.cluster.namespace }}
          --user {{ kubernetes.rbac.user }}

- name: Update context line of '{{ kubernetes.rbac.user }}.kubeconfig' file
  ansible.builtin.replace:
    path: "{{ rbac.dir }}/{{ kubernetes.rbac.user }}.kubeconfig"
    regexp: '^current-context: ""$'
    replace: 'current-context: "{{ kubernetes.rbac.user }}-kubernetes"'
    owner: "{{ user }}"
    group: "{{ user }}"
