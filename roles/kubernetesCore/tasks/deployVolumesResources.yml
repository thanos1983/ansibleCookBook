---
# tasks file for roles/kubernetesCore deployVolumesResources
- name: Launch deployment replica(s) for ingress '{{ ingressOption }}' on worker nodes
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ deployment.metadata.name }}"
        namespace: "{{ deployment.metadata.namespace }}"
        labels:
          app: "{{ deployment.metadata.labels.app }}"
      spec: "{{ spec | from_yaml }}"
  vars:
    spec: |
        replicas: {{ deployment.spec.replicas }}
        selector:
          matchLabels:
            app: "{{ deployment.spec.selector.matchLabels.app }}"
        template:
          metadata:
            labels:
              app: "{{ deployment.spec.template.metadata.labels.app }}"
          spec:
            containers:
            - name: "{{ deployment.spec.template.spec.containers.name }}"
              image: "{{ deployment.spec.template.spec.containers.image }}"
              resources:
                requests:
                  memory: "{{ deployment.spec.template.spec.containers.resources.requests.memory }}"
                  cpu: "{{ deployment.spec.template.spec.containers.resources.requests.cpu }}"
                limits:
                  memory: "{{ deployment.spec.template.spec.containers.resources.limits.memory }}"
                  cpu: "{{ deployment.spec.template.spec.containers.resources.limits.cpu }}"
              ports:
              - containerPort: {{ deployment.spec.template.spec.containers.ports.containerPort }}
              volumeMounts:
              - name: "{{ deployment.spec.template.spec.containers.volumeMounts.name }}"
                mountPath: "{{ deployment.spec.template.spec.containers.volumeMounts.mountPath }}"
            volumes:
            - name: "{{ deployment.spec.template.spec.volumes.name }}"
              configMap:
                name: "{{ deployment.spec.template.spec.volumes.configMap.name }}"
  connection: local
  delegate_to: localhost
