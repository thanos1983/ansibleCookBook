---
# tasks file for roles/kubernetesWorker main
- name: Validate Python Interpeter
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: interpreterValidation
  vars:
    pythonInterpreter: "python3"

- name: Remove node(s) from cluster if changing character (Worker <-> Master)
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: drain
  vars:
    assignPrimeMaster: false

- name: Destroy kube on node(s) in case the node was deployed previously up to 2m
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: destroy

- name: Request to populate token from Master Prime
  ansible.builtin.include_role:
    name: kubernetesMaster
    tasks_from: createToken
  vars:
    joinScript: join-command.sh
  run_once: true

- name: Append to join command the socket
  ansible.builtin.include_role:
    name: kubernetesMaster
    tasks_from: socket
  vars:
    joinScript: join-command.sh
  run_once: true

- name: Add node to the cluster
  ansible.builtin.include_role:
    name: kubernetesMaster
    tasks_from: addNodeToTheCluster
  vars:
    joinScript: join-command.sh 

- name: kubeconfig for user
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: kubeconfig
  vars:
    configFile: kubelet.conf

- name: Kubelet permissions
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: kubeletPermissions

- name: Kubectl Autocompletion
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: kubectlAutocompletion

- name: Label Nodes as Workers
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: labelNodes
  vars:
    nodeHostName: "{{ item }}"
    nodeLabel: "worker"
  loop: "{{ groups['kubernetes'] }}"
  run_once: true

- name: Check status of cluster
  ansible.builtin.include_role:
    name: kubernetesCore
    tasks_from: status
  run_once: true
