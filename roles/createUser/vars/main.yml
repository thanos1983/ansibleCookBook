---
# vars file for createUser
podmanUsers:
  - '{{ user }}'
  - '{{ ansible_user }}'

podmanNamespace:
  - 'echo user.max_user_namespaces=28633 > /etc/sysctl.d/userns.conf'
  - 'sysctl -p /etc/sysctl.d/userns.conf'

systemFilesLinuxManagement:
  - '/etc/passwd.lock'
  - '/etc/shadow.lock'
  - '/etc/group.lock'
  - '/etc/gshadow.lock'

userParameters:
  podman:
    - { uid: '{{ uid }}', name: '{{ user }}', password: '{{ password }}', group: '{{ group }}', groups: [ 'users', 'wheel' ] }
  docker:
    - { uid: '{{ uid }}', name: '{{ user }}', password: '{{ password }}', group: '{{ group }}', groups: [ 'users', 'wheel', 'docker' ] }

rootlessContainers:
  - { path: '/etc/subuid', line: '{{ user }}:100000:65536', insertbefore: 'EOF' }
  - { path: '/etc/subgid', line: '{{ user }}:100000:65536', insertbefore: 'EOF' }
  - { path: '/etc/subuid', line: '{{ ansible_user }}:165537:65536', insertbefore: 'EOF' }
  - { path: '/etc/subgid', line: '{{ ansible_user }}:165537:65536', insertbefore: 'EOF' }

rootlessConf:
  dir:
    - { path: '/etc/containers/nodocker', state: 'touch', recurse: 'no', owner: 'root', group: 'root', mode: '0644' }
    - { path: '{{ storage.podman.runroot }}', state: 'directory', recurse: 'no', owner: '{{ user }}', group: '{{ group }}', mode: '0755' }
    - { path: '{{ storage.podman.graphroot }}', state: 'directory', recurse: 'no', owner: '{{ user }}', group: '{{ group }}', mode: '0755' }
    - { path: '/home/{{ user }}/.config/containers/', state: 'directory', recurse: 'yes', owner: '{{ user }}', group: '{{ group }}', mode: '0755' }
  conf:
    - { src: 'storage_user.conf.j2', dest: '/home/{{ user }}/.config/containers/storage.conf', owner: '{{ user }}', group: '{{ group }}', mode: '0644' }
    - { src: 'dev_ops_user.conf.j2', dest: '/home/{{ ansible_user }}/.config/containers/storage.conf', owner: '{{ ansible_user }}', group: 'myGroup', mode: '0644' } # update the group based on user
